// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package graph.proxies;

public class Edge
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject edgeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Graph.Edge";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Label("Label"),
		Cluster("Cluster"),
		Edge_Node_From("Graph.Edge_Node_From"),
		Edge_Node_To("Graph.Edge_Node_To");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Edge(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Graph.Edge"));
	}

	protected Edge(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject edgeMendixObject)
	{
		if (edgeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Graph.Edge", edgeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Graph.Edge");

		this.edgeMendixObject = edgeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Edge.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static graph.proxies.Edge initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return graph.proxies.Edge.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static graph.proxies.Edge initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new graph.proxies.Edge(context, mendixObject);
	}

	public static graph.proxies.Edge load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return graph.proxies.Edge.initialize(context, mendixObject);
	}

	public static java.util.List<graph.proxies.Edge> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<graph.proxies.Edge> result = new java.util.ArrayList<graph.proxies.Edge>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Graph.Edge" + xpathConstraint))
			result.add(graph.proxies.Edge.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Label
	 */
	public final java.lang.String getLabel()
	{
		return getLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of Label
	 */
	public final java.lang.String getLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Label.toString());
	}

	/**
	 * Set value of Label
	 * @param label
	 */
	public final void setLabel(java.lang.String label)
	{
		setLabel(getContext(), label);
	}

	/**
	 * Set value of Label
	 * @param context
	 * @param label
	 */
	public final void setLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String label)
	{
		getMendixObject().setValue(context, MemberNames.Label.toString(), label);
	}

	/**
	 * @return value of Cluster
	 */
	public final java.lang.String getCluster()
	{
		return getCluster(getContext());
	}

	/**
	 * @param context
	 * @return value of Cluster
	 */
	public final java.lang.String getCluster(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Cluster.toString());
	}

	/**
	 * Set value of Cluster
	 * @param cluster
	 */
	public final void setCluster(java.lang.String cluster)
	{
		setCluster(getContext(), cluster);
	}

	/**
	 * Set value of Cluster
	 * @param context
	 * @param cluster
	 */
	public final void setCluster(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String cluster)
	{
		getMendixObject().setValue(context, MemberNames.Cluster.toString(), cluster);
	}

	/**
	 * @return value of Edge_Node_From
	 */
	public final graph.proxies.Node getEdge_Node_From() throws com.mendix.core.CoreException
	{
		return getEdge_Node_From(getContext());
	}

	/**
	 * @param context
	 * @return value of Edge_Node_From
	 */
	public final graph.proxies.Node getEdge_Node_From(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		graph.proxies.Node result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Edge_Node_From.toString());
		if (identifier != null)
			result = graph.proxies.Node.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Edge_Node_From
	 * @param edge_node_from
	 */
	public final void setEdge_Node_From(graph.proxies.Node edge_node_from)
	{
		setEdge_Node_From(getContext(), edge_node_from);
	}

	/**
	 * Set value of Edge_Node_From
	 * @param context
	 * @param edge_node_from
	 */
	public final void setEdge_Node_From(com.mendix.systemwideinterfaces.core.IContext context, graph.proxies.Node edge_node_from)
	{
		if (edge_node_from == null)
			getMendixObject().setValue(context, MemberNames.Edge_Node_From.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Edge_Node_From.toString(), edge_node_from.getMendixObject().getId());
	}

	/**
	 * @return value of Edge_Node_To
	 */
	public final graph.proxies.Node getEdge_Node_To() throws com.mendix.core.CoreException
	{
		return getEdge_Node_To(getContext());
	}

	/**
	 * @param context
	 * @return value of Edge_Node_To
	 */
	public final graph.proxies.Node getEdge_Node_To(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		graph.proxies.Node result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Edge_Node_To.toString());
		if (identifier != null)
			result = graph.proxies.Node.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Edge_Node_To
	 * @param edge_node_to
	 */
	public final void setEdge_Node_To(graph.proxies.Node edge_node_to)
	{
		setEdge_Node_To(getContext(), edge_node_to);
	}

	/**
	 * Set value of Edge_Node_To
	 * @param context
	 * @param edge_node_to
	 */
	public final void setEdge_Node_To(com.mendix.systemwideinterfaces.core.IContext context, graph.proxies.Node edge_node_to)
	{
		if (edge_node_to == null)
			getMendixObject().setValue(context, MemberNames.Edge_Node_To.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Edge_Node_To.toString(), edge_node_to.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return edgeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final graph.proxies.Edge that = (graph.proxies.Edge) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Graph.Edge";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
