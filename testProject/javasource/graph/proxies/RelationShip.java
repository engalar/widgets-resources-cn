// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package graph.proxies;

public class RelationShip
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject relationShipMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Graph.RelationShip";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Cluster("Cluster"),
		RelationType("RelationType"),
		RelationShip_Customer_From("Graph.RelationShip_Customer_From"),
		RelationShip_Customer_To("Graph.RelationShip_Customer_To");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RelationShip(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Graph.RelationShip"));
	}

	protected RelationShip(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject relationShipMendixObject)
	{
		if (relationShipMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Graph.RelationShip", relationShipMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Graph.RelationShip");

		this.relationShipMendixObject = relationShipMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'RelationShip.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static graph.proxies.RelationShip initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return graph.proxies.RelationShip.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static graph.proxies.RelationShip initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new graph.proxies.RelationShip(context, mendixObject);
	}

	public static graph.proxies.RelationShip load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return graph.proxies.RelationShip.initialize(context, mendixObject);
	}

	public static java.util.List<graph.proxies.RelationShip> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<graph.proxies.RelationShip> result = new java.util.ArrayList<graph.proxies.RelationShip>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Graph.RelationShip" + xpathConstraint))
			result.add(graph.proxies.RelationShip.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Cluster
	 */
	public final java.lang.String getCluster()
	{
		return getCluster(getContext());
	}

	/**
	 * @param context
	 * @return value of Cluster
	 */
	public final java.lang.String getCluster(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Cluster.toString());
	}

	/**
	 * Set value of Cluster
	 * @param cluster
	 */
	public final void setCluster(java.lang.String cluster)
	{
		setCluster(getContext(), cluster);
	}

	/**
	 * Set value of Cluster
	 * @param context
	 * @param cluster
	 */
	public final void setCluster(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String cluster)
	{
		getMendixObject().setValue(context, MemberNames.Cluster.toString(), cluster);
	}

	/**
	 * @return value of RelationType
	 */
	public final java.lang.String getRelationType()
	{
		return getRelationType(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationType
	 */
	public final java.lang.String getRelationType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RelationType.toString());
	}

	/**
	 * Set value of RelationType
	 * @param relationtype
	 */
	public final void setRelationType(java.lang.String relationtype)
	{
		setRelationType(getContext(), relationtype);
	}

	/**
	 * Set value of RelationType
	 * @param context
	 * @param relationtype
	 */
	public final void setRelationType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String relationtype)
	{
		getMendixObject().setValue(context, MemberNames.RelationType.toString(), relationtype);
	}

	/**
	 * @return value of RelationShip_Customer_From
	 */
	public final graph.proxies.Customer getRelationShip_Customer_From() throws com.mendix.core.CoreException
	{
		return getRelationShip_Customer_From(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationShip_Customer_From
	 */
	public final graph.proxies.Customer getRelationShip_Customer_From(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		graph.proxies.Customer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RelationShip_Customer_From.toString());
		if (identifier != null)
			result = graph.proxies.Customer.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RelationShip_Customer_From
	 * @param relationship_customer_from
	 */
	public final void setRelationShip_Customer_From(graph.proxies.Customer relationship_customer_from)
	{
		setRelationShip_Customer_From(getContext(), relationship_customer_from);
	}

	/**
	 * Set value of RelationShip_Customer_From
	 * @param context
	 * @param relationship_customer_from
	 */
	public final void setRelationShip_Customer_From(com.mendix.systemwideinterfaces.core.IContext context, graph.proxies.Customer relationship_customer_from)
	{
		if (relationship_customer_from == null)
			getMendixObject().setValue(context, MemberNames.RelationShip_Customer_From.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RelationShip_Customer_From.toString(), relationship_customer_from.getMendixObject().getId());
	}

	/**
	 * @return value of RelationShip_Customer_To
	 */
	public final graph.proxies.Customer getRelationShip_Customer_To() throws com.mendix.core.CoreException
	{
		return getRelationShip_Customer_To(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationShip_Customer_To
	 */
	public final graph.proxies.Customer getRelationShip_Customer_To(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		graph.proxies.Customer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RelationShip_Customer_To.toString());
		if (identifier != null)
			result = graph.proxies.Customer.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RelationShip_Customer_To
	 * @param relationship_customer_to
	 */
	public final void setRelationShip_Customer_To(graph.proxies.Customer relationship_customer_to)
	{
		setRelationShip_Customer_To(getContext(), relationship_customer_to);
	}

	/**
	 * Set value of RelationShip_Customer_To
	 * @param context
	 * @param relationship_customer_to
	 */
	public final void setRelationShip_Customer_To(com.mendix.systemwideinterfaces.core.IContext context, graph.proxies.Customer relationship_customer_to)
	{
		if (relationship_customer_to == null)
			getMendixObject().setValue(context, MemberNames.RelationShip_Customer_To.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RelationShip_Customer_To.toString(), relationship_customer_to.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return relationShipMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final graph.proxies.RelationShip that = (graph.proxies.RelationShip) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Graph.RelationShip";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
