// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package fileviewer.proxies;

public class Entity extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "FileViewer.Entity";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Attribute("Attribute"),
		Attribute_2("Attribute_2"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Entity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "FileViewer.Entity"));
	}

	protected Entity(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject entityMendixObject)
	{
		super(context, entityMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("FileViewer.Entity", entityMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a FileViewer.Entity");
	}

	/**
	 * @deprecated Use 'Entity.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static fileviewer.proxies.Entity initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return fileviewer.proxies.Entity.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static fileviewer.proxies.Entity initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new fileviewer.proxies.Entity(context, mendixObject);
	}

	public static fileviewer.proxies.Entity load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return fileviewer.proxies.Entity.initialize(context, mendixObject);
	}

	public static java.util.List<fileviewer.proxies.Entity> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<fileviewer.proxies.Entity> result = new java.util.ArrayList<fileviewer.proxies.Entity>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//FileViewer.Entity" + xpathConstraint))
			result.add(fileviewer.proxies.Entity.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Attribute
	 */
	public final java.lang.String getAttribute()
	{
		return getAttribute(getContext());
	}

	/**
	 * @param context
	 * @return value of Attribute
	 */
	public final java.lang.String getAttribute(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Attribute.toString());
	}

	/**
	 * Set value of Attribute
	 * @param attribute
	 */
	public final void setAttribute(java.lang.String attribute)
	{
		setAttribute(getContext(), attribute);
	}

	/**
	 * Set value of Attribute
	 * @param context
	 * @param attribute
	 */
	public final void setAttribute(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String attribute)
	{
		getMendixObject().setValue(context, MemberNames.Attribute.toString(), attribute);
	}

	/**
	 * @return value of Attribute_2
	 */
	public final java.lang.String getAttribute_2()
	{
		return getAttribute_2(getContext());
	}

	/**
	 * @param context
	 * @return value of Attribute_2
	 */
	public final java.lang.String getAttribute_2(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Attribute_2.toString());
	}

	/**
	 * Set value of Attribute_2
	 * @param attribute_2
	 */
	public final void setAttribute_2(java.lang.String attribute_2)
	{
		setAttribute_2(getContext(), attribute_2);
	}

	/**
	 * Set value of Attribute_2
	 * @param context
	 * @param attribute_2
	 */
	public final void setAttribute_2(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String attribute_2)
	{
		getMendixObject().setValue(context, MemberNames.Attribute_2.toString(), attribute_2);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final fileviewer.proxies.Entity that = (fileviewer.proxies.Entity) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "FileViewer.Entity";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
