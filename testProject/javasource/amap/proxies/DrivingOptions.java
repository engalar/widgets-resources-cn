// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amap.proxies;

public class DrivingOptions
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject drivingOptionsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AMap.DrivingOptions";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		policy("policy"),
		extensions("extensions"),
		ferry("ferry"),
		AMapContext_DrivingOptions("AMap.AMapContext_DrivingOptions"),
		DrivingOptions_LngLat_Source("AMap.DrivingOptions_LngLat_Source"),
		DrivingOptions_LngLat_Destination("AMap.DrivingOptions_LngLat_Destination");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DrivingOptions(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AMap.DrivingOptions"));
	}

	protected DrivingOptions(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject drivingOptionsMendixObject)
	{
		if (drivingOptionsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AMap.DrivingOptions", drivingOptionsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AMap.DrivingOptions");

		this.drivingOptionsMendixObject = drivingOptionsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DrivingOptions.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static amap.proxies.DrivingOptions initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return amap.proxies.DrivingOptions.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static amap.proxies.DrivingOptions initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new amap.proxies.DrivingOptions(context, mendixObject);
	}

	public static amap.proxies.DrivingOptions load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return amap.proxies.DrivingOptions.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of policy
	 * @param policy
	 */
	public final amap.proxies.DrivingPolicy getpolicy()
	{
		return getpolicy(getContext());
	}

	/**
	 * @param context
	 * @return value of policy
	 */
	public final amap.proxies.DrivingPolicy getpolicy(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.policy.toString());
		if (obj == null)
			return null;

		return amap.proxies.DrivingPolicy.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of policy
	 * @param policy
	 */
	public final void setpolicy(amap.proxies.DrivingPolicy policy)
	{
		setpolicy(getContext(), policy);
	}

	/**
	 * Set value of policy
	 * @param context
	 * @param policy
	 */
	public final void setpolicy(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.DrivingPolicy policy)
	{
		if (policy != null)
			getMendixObject().setValue(context, MemberNames.policy.toString(), policy.toString());
		else
			getMendixObject().setValue(context, MemberNames.policy.toString(), null);
	}

	/**
	 * Set value of extensions
	 * @param extensions
	 */
	public final amap.proxies.Extension getextensions()
	{
		return getextensions(getContext());
	}

	/**
	 * @param context
	 * @return value of extensions
	 */
	public final amap.proxies.Extension getextensions(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.extensions.toString());
		if (obj == null)
			return null;

		return amap.proxies.Extension.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of extensions
	 * @param extensions
	 */
	public final void setextensions(amap.proxies.Extension extensions)
	{
		setextensions(getContext(), extensions);
	}

	/**
	 * Set value of extensions
	 * @param context
	 * @param extensions
	 */
	public final void setextensions(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.Extension extensions)
	{
		if (extensions != null)
			getMendixObject().setValue(context, MemberNames.extensions.toString(), extensions.toString());
		else
			getMendixObject().setValue(context, MemberNames.extensions.toString(), null);
	}

	/**
	 * @return value of ferry
	 */
	public final java.lang.Boolean getferry()
	{
		return getferry(getContext());
	}

	/**
	 * @param context
	 * @return value of ferry
	 */
	public final java.lang.Boolean getferry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ferry.toString());
	}

	/**
	 * Set value of ferry
	 * @param ferry
	 */
	public final void setferry(java.lang.Boolean ferry)
	{
		setferry(getContext(), ferry);
	}

	/**
	 * Set value of ferry
	 * @param context
	 * @param ferry
	 */
	public final void setferry(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean ferry)
	{
		getMendixObject().setValue(context, MemberNames.ferry.toString(), ferry);
	}

	/**
	 * @return value of AMapContext_DrivingOptions
	 */
	public final amap.proxies.AMapContext getAMapContext_DrivingOptions() throws com.mendix.core.CoreException
	{
		return getAMapContext_DrivingOptions(getContext());
	}

	/**
	 * @param context
	 * @return value of AMapContext_DrivingOptions
	 */
	public final amap.proxies.AMapContext getAMapContext_DrivingOptions(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amap.proxies.AMapContext result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AMapContext_DrivingOptions.toString());
		if (identifier != null)
			result = amap.proxies.AMapContext.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AMapContext_DrivingOptions
	 * @param amapcontext_drivingoptions
	 */
	public final void setAMapContext_DrivingOptions(amap.proxies.AMapContext amapcontext_drivingoptions)
	{
		setAMapContext_DrivingOptions(getContext(), amapcontext_drivingoptions);
	}

	/**
	 * Set value of AMapContext_DrivingOptions
	 * @param context
	 * @param amapcontext_drivingoptions
	 */
	public final void setAMapContext_DrivingOptions(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.AMapContext amapcontext_drivingoptions)
	{
		if (amapcontext_drivingoptions == null)
			getMendixObject().setValue(context, MemberNames.AMapContext_DrivingOptions.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AMapContext_DrivingOptions.toString(), amapcontext_drivingoptions.getMendixObject().getId());
	}

	/**
	 * @return value of DrivingOptions_LngLat_Source
	 */
	public final amap.proxies.LngLat getDrivingOptions_LngLat_Source() throws com.mendix.core.CoreException
	{
		return getDrivingOptions_LngLat_Source(getContext());
	}

	/**
	 * @param context
	 * @return value of DrivingOptions_LngLat_Source
	 */
	public final amap.proxies.LngLat getDrivingOptions_LngLat_Source(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amap.proxies.LngLat result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DrivingOptions_LngLat_Source.toString());
		if (identifier != null)
			result = amap.proxies.LngLat.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DrivingOptions_LngLat_Source
	 * @param drivingoptions_lnglat_source
	 */
	public final void setDrivingOptions_LngLat_Source(amap.proxies.LngLat drivingoptions_lnglat_source)
	{
		setDrivingOptions_LngLat_Source(getContext(), drivingoptions_lnglat_source);
	}

	/**
	 * Set value of DrivingOptions_LngLat_Source
	 * @param context
	 * @param drivingoptions_lnglat_source
	 */
	public final void setDrivingOptions_LngLat_Source(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.LngLat drivingoptions_lnglat_source)
	{
		if (drivingoptions_lnglat_source == null)
			getMendixObject().setValue(context, MemberNames.DrivingOptions_LngLat_Source.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DrivingOptions_LngLat_Source.toString(), drivingoptions_lnglat_source.getMendixObject().getId());
	}

	/**
	 * @return value of DrivingOptions_LngLat_Destination
	 */
	public final amap.proxies.LngLat getDrivingOptions_LngLat_Destination() throws com.mendix.core.CoreException
	{
		return getDrivingOptions_LngLat_Destination(getContext());
	}

	/**
	 * @param context
	 * @return value of DrivingOptions_LngLat_Destination
	 */
	public final amap.proxies.LngLat getDrivingOptions_LngLat_Destination(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amap.proxies.LngLat result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DrivingOptions_LngLat_Destination.toString());
		if (identifier != null)
			result = amap.proxies.LngLat.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DrivingOptions_LngLat_Destination
	 * @param drivingoptions_lnglat_destination
	 */
	public final void setDrivingOptions_LngLat_Destination(amap.proxies.LngLat drivingoptions_lnglat_destination)
	{
		setDrivingOptions_LngLat_Destination(getContext(), drivingoptions_lnglat_destination);
	}

	/**
	 * Set value of DrivingOptions_LngLat_Destination
	 * @param context
	 * @param drivingoptions_lnglat_destination
	 */
	public final void setDrivingOptions_LngLat_Destination(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.LngLat drivingoptions_lnglat_destination)
	{
		if (drivingoptions_lnglat_destination == null)
			getMendixObject().setValue(context, MemberNames.DrivingOptions_LngLat_Destination.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DrivingOptions_LngLat_Destination.toString(), drivingoptions_lnglat_destination.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return drivingOptionsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final amap.proxies.DrivingOptions that = (amap.proxies.DrivingOptions) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AMap.DrivingOptions";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
