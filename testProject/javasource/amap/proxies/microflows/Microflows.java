// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amap.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the AMap module
	public static void aMap_Change(IContext context, amap.proxies.AMapContext _aMapPageContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AMapPageContext", _aMapPageContext == null ? null : _aMapPageContext.getMendixObject());
		Core.microflowCall("AMap.AMap_Change").withParams(params).execute(context);
	}
	public static void aMap_Change_Center(IContext context, amap.proxies.AMapMarkerDto _aMapMarkerDto, amap.proxies.AMapContext _aMapPageContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AMapMarkerDto", _aMapMarkerDto == null ? null : _aMapMarkerDto.getMendixObject());
		params.put("AMapPageContext", _aMapPageContext == null ? null : _aMapPageContext.getMendixObject());
		Core.microflowCall("AMap.AMap_Change_Center").withParams(params).execute(context);
	}
	public static amap.proxies.AMapContext aMap_Datasource(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AMap.AMap_Datasource").withParams(params).execute(context);
		return result == null ? null : amap.proxies.AMapContext.initialize(context, result);
	}
	public static void aMap_Marker_Selected(IContext context, amap.proxies.AMapMarkerDto _aMapMarkerDto)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AMapMarkerDto", _aMapMarkerDto == null ? null : _aMapMarkerDto.getMendixObject());
		Core.microflowCall("AMap.AMap_Marker_Selected").withParams(params).execute(context);
	}
	public static void nav_Driving(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("AMap.Nav_Driving").withParams(params).execute(context);
	}
}