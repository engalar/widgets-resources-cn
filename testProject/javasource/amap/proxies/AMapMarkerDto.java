// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amap.proxies;

public class AMapMarkerDto
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject aMapMarkerDtoMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AMap.AMapMarkerDto";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Lat("Lat"),
		Title("Title"),
		Lng("Lng"),
		AMapMarkerDto_AMapContext("AMap.AMapMarkerDto_AMapContext");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AMapMarkerDto(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AMap.AMapMarkerDto"));
	}

	protected AMapMarkerDto(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject aMapMarkerDtoMendixObject)
	{
		if (aMapMarkerDtoMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AMap.AMapMarkerDto", aMapMarkerDtoMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AMap.AMapMarkerDto");

		this.aMapMarkerDtoMendixObject = aMapMarkerDtoMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AMapMarkerDto.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static amap.proxies.AMapMarkerDto initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return amap.proxies.AMapMarkerDto.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static amap.proxies.AMapMarkerDto initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new amap.proxies.AMapMarkerDto(context, mendixObject);
	}

	public static amap.proxies.AMapMarkerDto load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return amap.proxies.AMapMarkerDto.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Lat
	 */
	public final java.math.BigDecimal getLat()
	{
		return getLat(getContext());
	}

	/**
	 * @param context
	 * @return value of Lat
	 */
	public final java.math.BigDecimal getLat(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Lat.toString());
	}

	/**
	 * Set value of Lat
	 * @param lat
	 */
	public final void setLat(java.math.BigDecimal lat)
	{
		setLat(getContext(), lat);
	}

	/**
	 * Set value of Lat
	 * @param context
	 * @param lat
	 */
	public final void setLat(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal lat)
	{
		getMendixObject().setValue(context, MemberNames.Lat.toString(), lat);
	}

	/**
	 * @return value of Title
	 */
	public final java.lang.String getTitle()
	{
		return getTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of Title
	 */
	public final java.lang.String getTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Title.toString());
	}

	/**
	 * Set value of Title
	 * @param title
	 */
	public final void setTitle(java.lang.String title)
	{
		setTitle(getContext(), title);
	}

	/**
	 * Set value of Title
	 * @param context
	 * @param title
	 */
	public final void setTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String title)
	{
		getMendixObject().setValue(context, MemberNames.Title.toString(), title);
	}

	/**
	 * @return value of Lng
	 */
	public final java.math.BigDecimal getLng()
	{
		return getLng(getContext());
	}

	/**
	 * @param context
	 * @return value of Lng
	 */
	public final java.math.BigDecimal getLng(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Lng.toString());
	}

	/**
	 * Set value of Lng
	 * @param lng
	 */
	public final void setLng(java.math.BigDecimal lng)
	{
		setLng(getContext(), lng);
	}

	/**
	 * Set value of Lng
	 * @param context
	 * @param lng
	 */
	public final void setLng(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal lng)
	{
		getMendixObject().setValue(context, MemberNames.Lng.toString(), lng);
	}

	/**
	 * @return value of AMapMarkerDto_AMapContext
	 */
	public final amap.proxies.AMapContext getAMapMarkerDto_AMapContext() throws com.mendix.core.CoreException
	{
		return getAMapMarkerDto_AMapContext(getContext());
	}

	/**
	 * @param context
	 * @return value of AMapMarkerDto_AMapContext
	 */
	public final amap.proxies.AMapContext getAMapMarkerDto_AMapContext(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amap.proxies.AMapContext result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AMapMarkerDto_AMapContext.toString());
		if (identifier != null)
			result = amap.proxies.AMapContext.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AMapMarkerDto_AMapContext
	 * @param amapmarkerdto_amapcontext
	 */
	public final void setAMapMarkerDto_AMapContext(amap.proxies.AMapContext amapmarkerdto_amapcontext)
	{
		setAMapMarkerDto_AMapContext(getContext(), amapmarkerdto_amapcontext);
	}

	/**
	 * Set value of AMapMarkerDto_AMapContext
	 * @param context
	 * @param amapmarkerdto_amapcontext
	 */
	public final void setAMapMarkerDto_AMapContext(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.AMapContext amapmarkerdto_amapcontext)
	{
		if (amapmarkerdto_amapcontext == null)
			getMendixObject().setValue(context, MemberNames.AMapMarkerDto_AMapContext.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AMapMarkerDto_AMapContext.toString(), amapmarkerdto_amapcontext.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return aMapMarkerDtoMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final amap.proxies.AMapMarkerDto that = (amap.proxies.AMapMarkerDto) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AMap.AMapMarkerDto";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
