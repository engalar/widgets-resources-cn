// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amap.proxies;

public class AMapContext
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject aMapContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AMap.AMapContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Zoom("Zoom"),
		LatCenter("LatCenter"),
		LngCenter("LngCenter"),
		DrivingResult_AMapContext("AMap.DrivingResult_AMapContext"),
		AMapContext_DrivingOptions("AMap.AMapContext_DrivingOptions");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AMapContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AMap.AMapContext"));
	}

	protected AMapContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject aMapContextMendixObject)
	{
		if (aMapContextMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AMap.AMapContext", aMapContextMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AMap.AMapContext");

		this.aMapContextMendixObject = aMapContextMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AMapContext.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static amap.proxies.AMapContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return amap.proxies.AMapContext.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static amap.proxies.AMapContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new amap.proxies.AMapContext(context, mendixObject);
	}

	public static amap.proxies.AMapContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return amap.proxies.AMapContext.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Zoom
	 */
	public final java.math.BigDecimal getZoom()
	{
		return getZoom(getContext());
	}

	/**
	 * @param context
	 * @return value of Zoom
	 */
	public final java.math.BigDecimal getZoom(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Zoom.toString());
	}

	/**
	 * Set value of Zoom
	 * @param zoom
	 */
	public final void setZoom(java.math.BigDecimal zoom)
	{
		setZoom(getContext(), zoom);
	}

	/**
	 * Set value of Zoom
	 * @param context
	 * @param zoom
	 */
	public final void setZoom(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal zoom)
	{
		getMendixObject().setValue(context, MemberNames.Zoom.toString(), zoom);
	}

	/**
	 * @return value of LatCenter
	 */
	public final java.math.BigDecimal getLatCenter()
	{
		return getLatCenter(getContext());
	}

	/**
	 * @param context
	 * @return value of LatCenter
	 */
	public final java.math.BigDecimal getLatCenter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.LatCenter.toString());
	}

	/**
	 * Set value of LatCenter
	 * @param latcenter
	 */
	public final void setLatCenter(java.math.BigDecimal latcenter)
	{
		setLatCenter(getContext(), latcenter);
	}

	/**
	 * Set value of LatCenter
	 * @param context
	 * @param latcenter
	 */
	public final void setLatCenter(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal latcenter)
	{
		getMendixObject().setValue(context, MemberNames.LatCenter.toString(), latcenter);
	}

	/**
	 * @return value of LngCenter
	 */
	public final java.math.BigDecimal getLngCenter()
	{
		return getLngCenter(getContext());
	}

	/**
	 * @param context
	 * @return value of LngCenter
	 */
	public final java.math.BigDecimal getLngCenter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.LngCenter.toString());
	}

	/**
	 * Set value of LngCenter
	 * @param lngcenter
	 */
	public final void setLngCenter(java.math.BigDecimal lngcenter)
	{
		setLngCenter(getContext(), lngcenter);
	}

	/**
	 * Set value of LngCenter
	 * @param context
	 * @param lngcenter
	 */
	public final void setLngCenter(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal lngcenter)
	{
		getMendixObject().setValue(context, MemberNames.LngCenter.toString(), lngcenter);
	}

	/**
	 * @return value of DrivingResult_AMapContext
	 */
	public final amap.proxies.DrivingResult getDrivingResult_AMapContext() throws com.mendix.core.CoreException
	{
		return getDrivingResult_AMapContext(getContext());
	}

	/**
	 * @param context
	 * @return value of DrivingResult_AMapContext
	 */
	public final amap.proxies.DrivingResult getDrivingResult_AMapContext(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amap.proxies.DrivingResult result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DrivingResult_AMapContext.toString());
		if (identifier != null)
			result = amap.proxies.DrivingResult.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DrivingResult_AMapContext
	 * @param drivingresult_amapcontext
	 */
	public final void setDrivingResult_AMapContext(amap.proxies.DrivingResult drivingresult_amapcontext)
	{
		setDrivingResult_AMapContext(getContext(), drivingresult_amapcontext);
	}

	/**
	 * Set value of DrivingResult_AMapContext
	 * @param context
	 * @param drivingresult_amapcontext
	 */
	public final void setDrivingResult_AMapContext(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.DrivingResult drivingresult_amapcontext)
	{
		if (drivingresult_amapcontext == null)
			getMendixObject().setValue(context, MemberNames.DrivingResult_AMapContext.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DrivingResult_AMapContext.toString(), drivingresult_amapcontext.getMendixObject().getId());
	}

	/**
	 * @return value of AMapContext_DrivingOptions
	 */
	public final amap.proxies.DrivingOptions getAMapContext_DrivingOptions() throws com.mendix.core.CoreException
	{
		return getAMapContext_DrivingOptions(getContext());
	}

	/**
	 * @param context
	 * @return value of AMapContext_DrivingOptions
	 */
	public final amap.proxies.DrivingOptions getAMapContext_DrivingOptions(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amap.proxies.DrivingOptions result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AMapContext_DrivingOptions.toString());
		if (identifier != null)
			result = amap.proxies.DrivingOptions.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AMapContext_DrivingOptions
	 * @param amapcontext_drivingoptions
	 */
	public final void setAMapContext_DrivingOptions(amap.proxies.DrivingOptions amapcontext_drivingoptions)
	{
		setAMapContext_DrivingOptions(getContext(), amapcontext_drivingoptions);
	}

	/**
	 * Set value of AMapContext_DrivingOptions
	 * @param context
	 * @param amapcontext_drivingoptions
	 */
	public final void setAMapContext_DrivingOptions(com.mendix.systemwideinterfaces.core.IContext context, amap.proxies.DrivingOptions amapcontext_drivingoptions)
	{
		if (amapcontext_drivingoptions == null)
			getMendixObject().setValue(context, MemberNames.AMapContext_DrivingOptions.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AMapContext_DrivingOptions.toString(), amapcontext_drivingoptions.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return aMapContextMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final amap.proxies.AMapContext that = (amap.proxies.AMapContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AMap.AMapContext";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
