// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package anttree.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the AntTree module
	public static void act_Multiple_Select(IContext context, java.util.List<anttree.proxies.TreeNode> _treeNodeList, anttree.proxies.TreeNode _treeNode)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_treeNodeList = null;
		if (_treeNodeList != null)
		{
			listparam_treeNodeList = new java.util.ArrayList<>();
			for (anttree.proxies.TreeNode obj : _treeNodeList)
				listparam_treeNodeList.add(obj.getMendixObject());
		}
		params.put("TreeNodeList", listparam_treeNodeList);

		params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
		Core.microflowCall("AntTree.Act_Multiple_Select").withParams(params).execute(context);
	}
	public static java.util.List<anttree.proxies.TreeNode> dS_Tree(IContext context, anttree.proxies.TreeNode _treeNode)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("AntTree.DS_Tree").withParams(params).execute(context);
		java.util.List<anttree.proxies.TreeNode> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(anttree.proxies.TreeNode.initialize(context, obj));
		}
		return result;
	}
}